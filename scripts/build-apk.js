const { execSync } = require('child_process');
const path = require('path');

console.log('üöÄ Construction de l\'APK pour les tests de notifications push...\n');

try {
  console.log('üìã Instructions pour construire l\'APK :\n');
  
  console.log('1Ô∏è‚É£ Via le Dashboard EAS (Recommand√©) :');
  console.log('   - Allez sur https://expo.dev/accounts/mrcross/projects/yatou-delivery');
  console.log('   - Cliquez sur "Builds" dans le menu');
  console.log('   - Cliquez sur "New Build"');
  console.log('   - S√©lectionnez "Android" et "Preview"');
  console.log('   - Cliquez sur "Build"\n');
  
  console.log('2Ô∏è‚É£ Via la ligne de commande (si credentials configur√©s) :');
  console.log('   eas build --platform android --profile preview\n');
  
  console.log('3Ô∏è‚É£ Configuration des credentials :');
  console.log('   - Le syst√®me va demander de g√©n√©rer un keystore');
  console.log('   - Acceptez la g√©n√©ration automatique');
  console.log('   - Le build commencera automatiquement\n');
  
  console.log('üì± Apr√®s la construction :');
  console.log('   - L\'APK sera disponible dans le dashboard EAS');
  console.log('   - T√©l√©chargez l\'APK sur votre t√©l√©phone');
  console.log('   - Installez l\'APK');
  console.log('   - Testez les vraies notifications push !\n');
  
  console.log('üîß Alternative : Test avec Expo Go');
  console.log('   - Installez Expo Go sur votre t√©l√©phone');
  console.log('   - Scannez le QR code de l\'application');
  console.log('   - Les notifications locales fonctionneront\n');
  
  console.log('üéØ Prochaines √©tapes :');
  console.log('   1. Construire l\'APK (via dashboard ou CLI)');
  console.log('   2. Installer sur un appareil physique');
  console.log('   3. Se connecter en tant que livreur');
  console.log('   4. Tester les vraies notifications push');
  console.log('   5. V√©rifier les tokens en base de donn√©es\n');

} catch (error) {
  console.error('‚ùå Erreur:', error.message);
}
