require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const SUPABASE_URL = process.env.EXPO_PUBLIC_SUPABASE_URL;
const SUPABASE_ANON_KEY = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function checkDriversStatus() {
  console.log('üîç V√âRIFICATION DU STATUT DES LIVREURS\n');

  try {
    // V√©rifier tous les livreurs
    const { data: allDrivers, error: allError } = await supabase
      .from('drivers')
      .select(`
        id,
        user_id,
        is_available,
        current_location,
        vehicle_info,
        rating,
        total_deliveries,
        created_at,
        updated_at,
        expo_push_token,
        users!inner(id, name, email, phone, role)
      `);

    if (allError) {
      console.error('‚ùå Erreur lors de la r√©cup√©ration des livreurs:', allError);
      return;
    }

    console.log(`üìä TOTAL DES LIVREURS: ${allDrivers.length}\n`);

    if (allDrivers.length === 0) {
      console.log('‚ùå AUCUN LIVREUR TROUV√â');
      console.log('   - Aucun livreur enregistr√© dans la base de donn√©es');
      console.log('   - Cr√©ez des comptes livreur pour les voir sur la carte\n');
      return;
    }

    // Analyser le statut de chaque livreur
    allDrivers.forEach((driver, index) => {
      console.log(`üöó LIVREUR ${index + 1}:`);
      console.log(`   - ID: ${driver.id}`);
      console.log(`   - Nom: ${driver.users?.name || 'N/A'}`);
      console.log(`   - Email: ${driver.users?.email || 'N/A'}`);
      console.log(`   - R√¥le: ${driver.users?.role || 'N/A'}`);
      console.log(`   - Disponible: ${driver.is_available ? '‚úÖ OUI' : '‚ùå NON'}`);
      console.log(`   - Position: ${driver.current_location ? '‚úÖ GPS activ√©' : '‚ùå Pas de GPS'}`);
      console.log(`   - V√©hicule: ${driver.vehicle_info?.type || 'N/A'}`);
      console.log(`   - Token Push: ${driver.expo_push_token ? '‚úÖ Configur√©' : '‚ùå Manquant'}`);
      console.log(`   - Cr√©√©: ${new Date(driver.created_at).toLocaleString()}`);
      console.log(`   - Mis √† jour: ${new Date(driver.updated_at).toLocaleString()}`);
      console.log('');
    });

    // Compter les livreurs disponibles
    const availableDrivers = allDrivers.filter(d => d.is_available);
    const driversWithLocation = allDrivers.filter(d => d.current_location);
    const driversWithToken = allDrivers.filter(d => d.expo_push_token);

    console.log('üìà STATISTIQUES:');
    console.log(`   - Livreurs disponibles: ${availableDrivers.length}/${allDrivers.length}`);
    console.log(`   - Livreurs avec GPS: ${driversWithLocation.length}/${allDrivers.length}`);
    console.log(`   - Livreurs avec token: ${driversWithToken.length}/${allDrivers.length}\n`);

    // V√©rifier les livreurs qui devraient √™tre visibles
    const visibleDrivers = allDrivers.filter(d => 
      d.is_available && d.current_location
    );

    console.log('üëÅÔ∏è LIVREURS VISIBLES SUR LA CARTE:');
    if (visibleDrivers.length === 0) {
      console.log('   ‚ùå AUCUN LIVREUR VISIBLE');
      console.log('   - Raisons possibles:');
      console.log('     ‚Ä¢ Aucun livreur disponible');
      console.log('     ‚Ä¢ Aucun livreur avec GPS activ√©');
      console.log('     ‚Ä¢ Probl√®me de localisation');
    } else {
      visibleDrivers.forEach((driver, index) => {
        console.log(`   ${index + 1}. ${driver.users?.name} (${driver.vehicle_info?.type})`);
        console.log(`      Position: ${driver.current_location}`);
      });
    }

    console.log('\nüîß SOLUTIONS POSSIBLES:');
    console.log('1Ô∏è‚É£ Cr√©er des livreurs de test:');
    console.log('   - Cr√©er des comptes avec r√¥le "driver"');
    console.log('   - Activer leur statut disponible');
    console.log('   - Activer leur GPS\n');

    console.log('2Ô∏è‚É£ V√©rifier la localisation:');
    console.log('   - S\'assurer que les livreurs ont activ√© leur GPS');
    console.log('   - V√©rifier que current_location est mis √† jour\n');

    console.log('3Ô∏è‚É£ Tester avec un livreur existant:');
    console.log('   - Se connecter comme livreur');
    console.log('   - Activer le mode disponible');
    console.log('   - V√©rifier que la position est mise √† jour\n');

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error);
  }
}

checkDriversStatus();

